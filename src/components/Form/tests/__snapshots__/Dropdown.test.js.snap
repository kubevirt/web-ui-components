// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DropdownControl /> renders correctly with tooltips 1`] = `
<Dropdown
  choices={
    Array [
      Object {
        "name": "choice1",
      },
      Object {
        "name": "choice2",
      },
      Object {
        "name": "very long choice which needs to be shortened",
      },
    ]
  }
  disabled={false}
  id="1"
  isKebab={false}
  onChange={[Function]}
  value="This is dropdown button with tooltips"
  withTooltips={true}
>
  <ButtonGroup
    block={false}
    bsClass="btn-group"
    justified={true}
    key="1"
    vertical={false}
  >
    <div
      className="btn-group btn-group-justified"
    >
      <Dropdown
        className="kubevirt-dropdown"
        dropdownItems={
          Array [
            <DropdownItem
              onClick={[Function]}
              tooltip="choice1"
            >
              choice1
            </DropdownItem>,
            <DropdownItem
              onClick={[Function]}
              tooltip="choice2"
            >
              choice2
            </DropdownItem>,
            <DropdownItem
              onClick={[Function]}
              tooltip="very long choice which needs to be shortened"
            >
              very long choice which needs to be shortened
            </DropdownItem>,
          ]
        }
        isOpen={false}
        toggle={
          <DropdownToggle
            iconComponent={[Function]}
            isDisabled={false}
            onToggle={[Function]}
          >
            This is dropdown button with tooltips
          </DropdownToggle>
        }
      >
        <DropdownWithContext
          className="kubevirt-dropdown"
          direction="down"
          dropdownItems={
            Array [
              <DropdownItem
                onClick={[Function]}
                tooltip="choice1"
              >
                choice1
              </DropdownItem>,
              <DropdownItem
                onClick={[Function]}
                tooltip="choice2"
              >
                choice2
              </DropdownItem>,
              <DropdownItem
                onClick={[Function]}
                tooltip="very long choice which needs to be shortened"
              >
                very long choice which needs to be shortened
              </DropdownItem>,
            ]
          }
          isGrouped={false}
          isOpen={false}
          isPlain={false}
          onSelect={[Function]}
          position="left"
          toggle={
            <DropdownToggle
              iconComponent={[Function]}
              isDisabled={false}
              onToggle={[Function]}
            >
              This is dropdown button with tooltips
            </DropdownToggle>
          }
        >
          <div
            className="pf-c-dropdown kubevirt-dropdown"
          >
            <DropdownToggle
              ariaHasPopup={true}
              iconComponent={[Function]}
              id="pf-toggle-id-1"
              isDisabled={false}
              isOpen={false}
              isPlain={false}
              key=".0"
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown kubevirt-dropdown"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle"
                      id="pf-toggle-id-1"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        This is dropdown button with tooltips
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <Toggle
                ariaHasPopup={true}
                className=""
                id="pf-toggle-id-1"
                isActive={false}
                isDisabled={false}
                isFocused={false}
                isHovered={false}
                isOpen={false}
                isPlain={false}
                isSplitButton={false}
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      class="pf-c-dropdown kubevirt-dropdown"
                    >
                      <button
                        aria-expanded="false"
                        aria-haspopup="true"
                        class="pf-c-dropdown__toggle"
                        id="pf-toggle-id-1"
                        type="button"
                      >
                        <span
                          class="pf-c-dropdown__toggle-text"
                        >
                          This is dropdown button with tooltips
                        </span>
                        <svg
                          aria-hidden="true"
                          class="pf-c-dropdown__toggle-icon"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 320 512"
                          width="1em"
                        >
                          <path
                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                            transform=""
                          />
                        </svg>
                      </button>
                    </div>,
                  }
                }
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="pf-c-dropdown__toggle"
                  disabled={false}
                  id="pf-toggle-id-1"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <span
                    className="pf-c-dropdown__toggle-text"
                  >
                    This is dropdown button with tooltips
                  </span>
                  <CaretDownIcon
                    className="pf-c-dropdown__toggle-icon"
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                    title={null}
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      className="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </CaretDownIcon>
                </button>
              </Toggle>
            </DropdownToggle>
          </div>
        </DropdownWithContext>
      </Dropdown>
    </div>
  </ButtonGroup>
</Dropdown>
`;

exports[`<DropdownControl /> renders correctly without tooltips 1`] = `
<Dropdown
  choices={
    Array [
      Object {
        "name": "choice1",
      },
      Object {
        "name": "choice2",
      },
    ]
  }
  disabled={false}
  id="1"
  isKebab={false}
  onChange={[Function]}
  value="This is dropdown button"
  withTooltips={false}
>
  <ButtonGroup
    block={false}
    bsClass="btn-group"
    justified={true}
    key="1"
    vertical={false}
  >
    <div
      className="btn-group btn-group-justified"
    >
      <Dropdown
        className="kubevirt-dropdown"
        dropdownItems={
          Array [
            <DropdownItem
              onClick={[Function]}
            >
              choice1
            </DropdownItem>,
            <DropdownItem
              onClick={[Function]}
            >
              choice2
            </DropdownItem>,
          ]
        }
        isOpen={false}
        toggle={
          <DropdownToggle
            iconComponent={[Function]}
            isDisabled={false}
            onToggle={[Function]}
          >
            This is dropdown button
          </DropdownToggle>
        }
      >
        <DropdownWithContext
          className="kubevirt-dropdown"
          direction="down"
          dropdownItems={
            Array [
              <DropdownItem
                onClick={[Function]}
              >
                choice1
              </DropdownItem>,
              <DropdownItem
                onClick={[Function]}
              >
                choice2
              </DropdownItem>,
            ]
          }
          isGrouped={false}
          isOpen={false}
          isPlain={false}
          onSelect={[Function]}
          position="left"
          toggle={
            <DropdownToggle
              iconComponent={[Function]}
              isDisabled={false}
              onToggle={[Function]}
            >
              This is dropdown button
            </DropdownToggle>
          }
        >
          <div
            className="pf-c-dropdown kubevirt-dropdown"
          >
            <DropdownToggle
              ariaHasPopup={true}
              iconComponent={[Function]}
              id="pf-toggle-id-0"
              isDisabled={false}
              isOpen={false}
              isPlain={false}
              key=".0"
              onEnter={[Function]}
              onToggle={[Function]}
              parentRef={
                Object {
                  "current": <div
                    class="pf-c-dropdown kubevirt-dropdown"
                  >
                    <button
                      aria-expanded="false"
                      aria-haspopup="true"
                      class="pf-c-dropdown__toggle"
                      id="pf-toggle-id-0"
                      type="button"
                    >
                      <span
                        class="pf-c-dropdown__toggle-text"
                      >
                        This is dropdown button
                      </span>
                      <svg
                        aria-hidden="true"
                        class="pf-c-dropdown__toggle-icon"
                        fill="currentColor"
                        height="1em"
                        role="img"
                        style="vertical-align: -0.125em;"
                        viewBox="0 0 320 512"
                        width="1em"
                      >
                        <path
                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                          transform=""
                        />
                      </svg>
                    </button>
                  </div>,
                }
              }
            >
              <Toggle
                ariaHasPopup={true}
                className=""
                id="pf-toggle-id-0"
                isActive={false}
                isDisabled={false}
                isFocused={false}
                isHovered={false}
                isOpen={false}
                isPlain={false}
                isSplitButton={false}
                onEnter={[Function]}
                onToggle={[Function]}
                parentRef={
                  Object {
                    "current": <div
                      class="pf-c-dropdown kubevirt-dropdown"
                    >
                      <button
                        aria-expanded="false"
                        aria-haspopup="true"
                        class="pf-c-dropdown__toggle"
                        id="pf-toggle-id-0"
                        type="button"
                      >
                        <span
                          class="pf-c-dropdown__toggle-text"
                        >
                          This is dropdown button
                        </span>
                        <svg
                          aria-hidden="true"
                          class="pf-c-dropdown__toggle-icon"
                          fill="currentColor"
                          height="1em"
                          role="img"
                          style="vertical-align: -0.125em;"
                          viewBox="0 0 320 512"
                          width="1em"
                        >
                          <path
                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                            transform=""
                          />
                        </svg>
                      </button>
                    </div>,
                  }
                }
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="pf-c-dropdown__toggle"
                  disabled={false}
                  id="pf-toggle-id-0"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  type="button"
                >
                  <span
                    className="pf-c-dropdown__toggle-text"
                  >
                    This is dropdown button
                  </span>
                  <CaretDownIcon
                    className="pf-c-dropdown__toggle-icon"
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                    title={null}
                  >
                    <svg
                      aria-hidden={true}
                      aria-labelledby={null}
                      className="pf-c-dropdown__toggle-icon"
                      fill="currentColor"
                      height="1em"
                      role="img"
                      style={
                        Object {
                          "verticalAlign": "-0.125em",
                        }
                      }
                      viewBox="0 0 320 512"
                      width="1em"
                    >
                      <path
                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                        transform=""
                      />
                    </svg>
                  </CaretDownIcon>
                </button>
              </Toggle>
            </DropdownToggle>
          </div>
        </DropdownWithContext>
      </Dropdown>
    </div>
  </ButtonGroup>
</Dropdown>
`;
