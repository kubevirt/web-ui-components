// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FormFactory /> renders correctly 1`] = `
<FormFactory
  controlSize={5}
  fields={
    Object {
      "checkboxField": Object {
        "id": "checkbox",
        "title": "checkboxFieldTitle",
        "type": "checkbox",
      },
      "dropdownField": Object {
        "choices": Array [
          Object {
            "name": "value1",
          },
          Object {
            "name": "value2",
          },
        ],
        "defaultValue": "default",
        "id": "dropdown",
        "title": "dropdownField",
        "type": "dropdown",
      },
      "invisibleField": Object {
        "id": "invisible",
        "isVisible": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "checkboxField": Object {
                  "value": true,
                },
                "dropdownField": Object {
                  "value": "dropdownField",
                },
                "invisibleField": Object {
                  "value": "invisibleField",
                },
                "labelField": Object {
                  "type": "labelValue",
                },
                "passwordField": Object {
                  "value": "passswordField",
                },
                "requiredField": Object {
                  "value": "requiredField",
                },
                "textAreaField": Object {
                  "value": "textarea",
                },
                "textField": Object {
                  "value": "textField",
                },
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": false,
            },
          ],
        },
        "title": "invisibleField",
      },
      "labelField": Object {
        "id": "label",
        "title": "labelTitle",
        "type": "label",
      },
      "passwordField": Object {
        "id": "password",
        "title": "passwordField",
        "type": "password",
      },
      "requiredField": Object {
        "id": "required",
        "required": true,
        "title": "requiredField",
      },
      "textAreaField": Object {
        "id": "textarea",
        "type": "textarea",
      },
      "textField": Object {
        "id": "text",
        "title": "textField",
      },
    }
  }
  fieldsValues={
    Object {
      "checkboxField": Object {
        "value": true,
      },
      "dropdownField": Object {
        "value": "dropdownField",
      },
      "invisibleField": Object {
        "value": "invisibleField",
      },
      "labelField": Object {
        "type": "labelValue",
      },
      "passwordField": Object {
        "value": "passswordField",
      },
      "requiredField": Object {
        "value": "requiredField",
      },
      "textAreaField": Object {
        "value": "textarea",
      },
      "textField": Object {
        "value": "textField",
      },
    }
  }
  horizontal={true}
  labelSize={3}
  onFormChange={[MockFunction]}
  showLabels={true}
  textPosition="text-right"
>
  <Form
    bsClass="form"
    componentClass="form"
    horizontal={true}
    inline={false}
  >
    <form
      className="form-horizontal"
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        key="textField"
        validationState={null}
      >
        <div
          className="kubevirt-form-group form-group"
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <ControlLabel
                bsClass="control-label"
                className={null}
                srOnly={false}
              >
                <label
                  className="control-label"
                >
                  textField
                </label>
              </ControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                className=""
                disabled={false}
                id="text"
                key="text"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value="textField"
              >
                <FormControl
                  bsClass="form-control"
                  className=""
                  componentClass="input"
                  disabled={false}
                  id="text"
                  key="text"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value="textField"
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="text"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value="textField"
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        key="passwordField"
        validationState={null}
      >
        <div
          className="kubevirt-form-group form-group"
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <ControlLabel
                bsClass="control-label"
                className={null}
                srOnly={false}
              >
                <label
                  className="control-label"
                >
                  passwordField
                </label>
              </ControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                className=""
                disabled={false}
                id="password"
                key="password"
                onBlur={[Function]}
                onChange={[Function]}
                type="password"
                value="passswordField"
              >
                <FormControl
                  bsClass="form-control"
                  className=""
                  componentClass="input"
                  disabled={false}
                  id="password"
                  key="password"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="password"
                  value="passswordField"
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="password"
                    value="passswordField"
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        key="requiredField"
        validationState={null}
      >
        <div
          className="kubevirt-form-group form-group"
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <ControlLabel
                bsClass="control-label"
                className="required-pf"
                srOnly={false}
              >
                <label
                  className="required-pf control-label"
                >
                  requiredField
                </label>
              </ControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                className=""
                disabled={false}
                id="required"
                key="required"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value="requiredField"
              >
                <FormControl
                  bsClass="form-control"
                  className=""
                  componentClass="input"
                  disabled={false}
                  id="required"
                  key="required"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value="requiredField"
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="required"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value="requiredField"
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        key="dropdownField"
        validationState={null}
      >
        <div
          className="kubevirt-form-group form-group"
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <ControlLabel
                bsClass="control-label"
                className={null}
                srOnly={false}
              >
                <label
                  className="control-label"
                >
                  dropdownField
                </label>
              </ControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Dropdown
                choices={
                  Array [
                    Object {
                      "name": "value1",
                    },
                    Object {
                      "name": "value2",
                    },
                  ]
                }
                className=""
                disabled={false}
                id="dropdown"
                isKebab={false}
                onChange={[Function]}
                value="dropdownField"
                withTooltips={false}
              >
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={true}
                  key="dropdown"
                  vertical={false}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Dropdown
                      className="kubevirt-dropdown"
                      dropdownItems={
                        Array [
                          <DropdownItem
                            onClick={[Function]}
                          >
                            value1
                          </DropdownItem>,
                          <DropdownItem
                            onClick={[Function]}
                          >
                            value2
                          </DropdownItem>,
                        ]
                      }
                      isOpen={false}
                      toggle={
                        <DropdownToggle
                          iconComponent={[Function]}
                          isDisabled={false}
                          onToggle={[Function]}
                        >
                          dropdownField
                        </DropdownToggle>
                      }
                    >
                      <DropdownWithContext
                        className="kubevirt-dropdown"
                        direction="down"
                        dropdownItems={
                          Array [
                            <DropdownItem
                              onClick={[Function]}
                            >
                              value1
                            </DropdownItem>,
                            <DropdownItem
                              onClick={[Function]}
                            >
                              value2
                            </DropdownItem>,
                          ]
                        }
                        isGrouped={false}
                        isOpen={false}
                        isPlain={false}
                        onSelect={[Function]}
                        position="left"
                        toggle={
                          <DropdownToggle
                            iconComponent={[Function]}
                            isDisabled={false}
                            onToggle={[Function]}
                          >
                            dropdownField
                          </DropdownToggle>
                        }
                      >
                        <div
                          className="pf-c-dropdown kubevirt-dropdown"
                        >
                          <DropdownToggle
                            ariaHasPopup={true}
                            iconComponent={[Function]}
                            id="pf-toggle-id-0"
                            isDisabled={false}
                            isOpen={false}
                            isPlain={false}
                            key=".0"
                            onEnter={[Function]}
                            onToggle={[Function]}
                            parentRef={
                              Object {
                                "current": <div
                                  class="pf-c-dropdown kubevirt-dropdown"
                                >
                                  <button
                                    aria-expanded="false"
                                    aria-haspopup="true"
                                    class="pf-c-dropdown__toggle"
                                    id="pf-toggle-id-0"
                                    type="button"
                                  >
                                    <span
                                      class="pf-c-dropdown__toggle-text"
                                    >
                                      dropdownField
                                    </span>
                                    <svg
                                      aria-hidden="true"
                                      class="pf-c-dropdown__toggle-icon"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 320 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>,
                              }
                            }
                          >
                            <Toggle
                              ariaHasPopup={true}
                              className=""
                              id="pf-toggle-id-0"
                              isActive={false}
                              isDisabled={false}
                              isFocused={false}
                              isHovered={false}
                              isOpen={false}
                              isPlain={false}
                              isSplitButton={false}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-dropdown kubevirt-dropdown"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="true"
                                      class="pf-c-dropdown__toggle"
                                      id="pf-toggle-id-0"
                                      type="button"
                                    >
                                      <span
                                        class="pf-c-dropdown__toggle-text"
                                      >
                                        dropdownField
                                      </span>
                                      <svg
                                        aria-hidden="true"
                                        class="pf-c-dropdown__toggle-icon"
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style="vertical-align: -0.125em;"
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          transform=""
                                        />
                                      </svg>
                                    </button>
                                  </div>,
                                }
                              }
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                className="pf-c-dropdown__toggle"
                                disabled={false}
                                id="pf-toggle-id-0"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                type="button"
                              >
                                <span
                                  className="pf-c-dropdown__toggle-text"
                                >
                                  dropdownField
                                </span>
                                <CaretDownIcon
                                  className="pf-c-dropdown__toggle-icon"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                  title={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    className="pf-c-dropdown__toggle-icon"
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 320 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                      transform=""
                                    />
                                  </svg>
                                </CaretDownIcon>
                              </button>
                            </Toggle>
                          </DropdownToggle>
                        </div>
                      </DropdownWithContext>
                    </Dropdown>
                  </div>
                </ButtonGroup>
              </Dropdown>
            </div>
          </Col>
        </div>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        key="textAreaField"
        validationState={null}
      >
        <div
          className="kubevirt-form-group form-group"
        >
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <TextArea
                className=""
                disabled={false}
                id="textarea"
                key="textarea"
                onBlur={[Function]}
                onChange={[Function]}
                value="textarea"
              >
                <FormControl
                  bsClass="form-control"
                  className=""
                  componentClass="textarea"
                  disabled={false}
                  id="textarea"
                  onBlur={[Function]}
                  onChange={[Function]}
                  value="textarea"
                >
                  <textarea
                    className="form-control"
                    disabled={false}
                    id="textarea"
                    onBlur={[Function]}
                    onChange={[Function]}
                    value="textarea"
                  />
                </FormControl>
              </TextArea>
            </div>
          </Col>
        </div>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        key="checkboxField"
        validationState={null}
      >
        <div
          className="kubevirt-form-group form-group"
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            />
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Checkbox
                checked={true}
                className=""
                disabled={false}
                id="checkbox"
                key="checkbox"
                onBlur={[Function]}
                onChange={[Function]}
                title="checkboxFieldTitle"
              >
                <Checkbox
                  bsClass="checkbox"
                  checked={true}
                  className=""
                  disabled={false}
                  id="checkbox"
                  inline={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  title=""
                >
                  <div
                    className="checkbox"
                  >
                    <label
                      title=""
                    >
                      <input
                        checked={true}
                        disabled={false}
                        id="checkbox"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="checkbox"
                      />
                      checkboxFieldTitle
                    </label>
                  </div>
                </Checkbox>
              </Checkbox>
            </div>
          </Col>
        </div>
      </FormGroup>
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        key="labelField"
        validationState={null}
      >
        <div
          className="kubevirt-form-group form-group"
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <ControlLabel
                bsClass="control-label"
                className={null}
                srOnly={false}
              >
                <label
                  className="control-label"
                >
                  labelTitle
                </label>
              </ControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <div
                className=""
                key="label"
              />
            </div>
          </Col>
        </div>
      </FormGroup>
    </form>
  </Form>
</FormFactory>
`;

exports[`getFormElement renders correctly 1`] = `
<FormControl
  bsClass="form-control"
  componentClass="input"
  disabled={false}
  id="test-id"
  min={1}
  onBlur={[Function]}
  onChange={[Function]}
  onKeyDown={[Function]}
  type="number"
/>
`;
