// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Inventory /> renders Inventory correctly 1`] = `
<DashboardCard
  className={null}
>
  <DashboardCardHeader
    className={null}
  >
    <DashboardCardTitle
      className={null}
    >
      Inventory
    </DashboardCardTitle>
    <DashboardCardTitleHelp>
      help for inventory
    </DashboardCardTitleHelp>
  </DashboardCardHeader>
  <DashboardCardBody
    LoadingComponent={[Function]}
    isLoading={false}
  >
    <InventoryBody
      LoadingComponent={[Function]}
      cephOsdDown={
        Object {
          "data": Object {
            "result": Array [
              Object {
                "metric": Object {},
                "value": Array [
                  123,
                  "2",
                ],
              },
            ],
            "resultType": "vector",
          },
          "status": "success",
        }
      }
      cephOsdUp={
        Object {
          "data": Object {
            "result": Array [
              Object {
                "metric": Object {},
                "value": Array [
                  123,
                  "5",
                ],
              },
            ],
            "resultType": "vector",
          },
          "status": "success",
        }
      }
      nodes={
        Array [
          Object {
            "apiVersion": "v1",
            "kind": "Node",
            "metadata": Object {
              "annotations": Object {
                "kubevirt.io/heartbeat": "2019-03-18T16:49:58Z",
                "volumes.kubernetes.io/controller-managed-attach-detach": "true",
              },
              "creationTimestamp": "2019-02-18T14:44:15Z",
              "labels": Object {
                "beta.kubernetes.io/arch": "amd64",
                "beta.kubernetes.io/os": "linux",
                "kubernetes.io/hostname": "localhost",
                "kubevirt.io/schedulable": "true",
              },
              "name": "localhost",
              "namespace": "",
              "resourceVersion": "824726",
              "selfLink": "/api/v1/nodes/localhost",
              "uid": "cbe7be36-5026-4295-b2cc-6111f77b07d5",
            },
            "spec": Object {},
            "status": Object {
              "addresses": Array [
                Object {
                  "address": "192.168.0.25",
                  "type": "InternalIP",
                },
                Object {
                  "address": "localhost",
                  "type": "Hostname",
                },
              ],
              "allocatable": Object {
                "cpu": "8",
                "devices.kubevirt.io/kvm": "110",
                "devices.kubevirt.io/tun": "110",
                "devices.kubevirt.io/vhost-net": "110",
                "hugepages-1Gi": "0",
                "hugepages-2Mi": "0",
                "memory": "32197356Ki",
                "pods": "250",
              },
              "capacity": Object {
                "cpu": "8",
                "devices.kubevirt.io/kvm": "110",
                "devices.kubevirt.io/tun": "110",
                "devices.kubevirt.io/vhost-net": "110",
                "hugepages-1Gi": "0",
                "hugepages-2Mi": "0",
                "memory": "32299756Ki",
                "pods": "250",
              },
              "conditions": Array [
                Object {
                  "lastHeartbeatTime": "2019-03-18T16:50:08Z",
                  "lastTransitionTime": "2019-02-18T14:44:10Z",
                  "message": "kubelet has sufficient disk space available",
                  "reason": "KubeletHasSufficientDisk",
                  "status": "False",
                  "type": "OutOfDisk",
                },
                Object {
                  "lastHeartbeatTime": "2019-03-18T16:50:08Z",
                  "lastTransitionTime": "2019-02-18T14:44:10Z",
                  "message": "kubelet has sufficient memory available",
                  "reason": "KubeletHasSufficientMemory",
                  "status": "False",
                  "type": "MemoryPressure",
                },
                Object {
                  "lastHeartbeatTime": "2019-03-18T16:50:08Z",
                  "lastTransitionTime": "2019-02-18T14:44:10Z",
                  "message": "kubelet has no disk pressure",
                  "reason": "KubeletHasNoDiskPressure",
                  "status": "False",
                  "type": "DiskPressure",
                },
                Object {
                  "lastHeartbeatTime": "2019-03-18T16:50:08Z",
                  "lastTransitionTime": "2019-02-18T14:44:10Z",
                  "message": "kubelet has sufficient PID available",
                  "reason": "KubeletHasSufficientPID",
                  "status": "False",
                  "type": "PIDPressure",
                },
                Object {
                  "lastHeartbeatTime": "2019-03-18T16:50:08Z",
                  "lastTransitionTime": "2019-02-18T14:44:10Z",
                  "message": "kubelet is posting ready status",
                  "reason": "KubeletReady",
                  "status": "True",
                  "type": "Ready",
                },
              ],
              "daemonEndpoints": Object {
                "kubeletEndpoint": Object {
                  "Port": 10250,
                },
              },
              "images": Array [
                Object {
                  "names": Array [
                    "openshift/origin-node@sha256:952faf477f2819c19580d37e871eb36b2cd4fa8be2e7f3a0eebfa4021b220a1e",
                    "openshift/origin-node:v3.11",
                  ],
                  "sizeBytes": 1157249282,
                },
                Object {
                  "names": Array [
                    "openshift/origin-control-plane@sha256:bf28e6729781f2d68c9ea121cee5c649a084ae9a4dadefded9321e2e381a2549",
                    "openshift/origin-control-plane:v3.11",
                  ],
                  "sizeBytes": 826232564,
                },
                Object {
                  "names": Array [
                    "openshift/origin-deployer@sha256:dcd00fdc779c2b0afb33beb9cbc0a329a5baf51c6b9ea639453e7dcd0a99a011",
                    "openshift/origin-deployer:v3.10",
                  ],
                  "sizeBytes": 820312425,
                },
              ],
              "nodeInfo": Object {
                "architecture": "amd64",
                "bootID": "a10ef8ac-a1f6-425a-9a98-97d71bda0ba3",
                "containerRuntimeVersion": "docker://18.3.0",
                "kernelVersion": "4.20.8-arch1-1-ARCH",
                "kubeProxyVersion": "v1.11.0+d4cacc0",
                "kubeletVersion": "v1.11.0+d4cacc0",
                "machineID": "",
                "operatingSystem": "linux",
                "osImage": "CentOS Linux 7 (Core)",
                "systemUUID": "bb754413-b7ef-4628-87f1-d1746ecb3f9e",
              },
            },
          },
        ]
      }
      pvcs={
        Array [
          Object {
            "metadata": Object {
              "name": "disk-one",
              "namespace": "default",
            },
            "spec": Object {
              "resources": Object {
                "requests": Object {
                  "storage": "10gi",
                },
              },
              "storageClassName": "nfs",
            },
          },
          Object {
            "metadata": Object {
              "name": "disk-two",
              "namespace": "myproject",
            },
            "spec": Object {
              "resources": Object {
                "requests": Object {
                  "storage": "15gi",
                },
              },
              "storageClassName": "glusterfs",
            },
          },
          Object {
            "metadata": Object {
              "name": "disk-three",
              "namespace": "default",
            },
            "spec": Object {
              "resources": Object {
                "requests": Object {
                  "storage": "20gi",
                },
              },
              "storageClassName": "iscsi",
            },
          },
          Object {
            "metadata": Object {
              "name": "datavolume-url-success",
              "namespace": "default",
            },
            "spec": Object {
              "resources": Object {
                "requests": Object {
                  "storage": "20gi",
                },
              },
              "storageClassName": "iscsi",
            },
          },
          Object {
            "metadata": Object {
              "name": "datavolume-blank",
              "namespace": "default",
            },
            "spec": Object {
              "resources": Object {
                "requests": Object {
                  "storage": "20gi",
                },
              },
              "storageClassName": "iscsi",
            },
          },
        ]
      }
      pvs={
        Array [
          Object {
            "metadata": Object {
              "name": "disk-one_pv",
            },
            "spec": Object {
              "capacity": Object {
                "storage": "10gi",
              },
              "storageClassName": "nfs",
            },
          },
          Object {
            "metadata": Object {
              "name": "disk-two_pv",
            },
            "spec": Object {
              "capacity": Object {
                "storage": "15gi",
              },
              "storageClassName": "glusterfs",
            },
          },
          Object {
            "metadata": Object {
              "name": "disk-three_pv",
            },
            "spec": Object {
              "capacity": Object {
                "storage": "20gi",
              },
              "storageClassName": "iscsi",
            },
          },
          Object {
            "metadata": Object {
              "name": "datavolume-url-success_pv",
            },
            "spec": Object {
              "capacity": Object {
                "storage": "20gi",
              },
              "storageClassName": "iscsi",
            },
          },
          Object {
            "metadata": Object {
              "name": "datavolume-blank_pv",
            },
            "spec": Object {
              "capacity": Object {
                "storage": "20gi",
              },
              "storageClassName": "iscsi",
            },
          },
        ]
      }
    />
  </DashboardCardBody>
</DashboardCard>
`;

exports[`<Inventory /> renders correctly with Provider 1`] = `
<div
  class="card-pf kubevirt-dashboard__card"
>
  <div
    class="card-pf-heading kubevirt-dashboard__card-heading"
  >
    <h2
      class="card-pf-title kubevirt-dashboard__card-title"
    >
      Inventory
    </h2>
    <button
      class="btn btn-link"
      type="button"
    >
      <span
        aria-hidden="true"
        class="fa fa-info-circle kubevirt-dashboard__icon-sm kubevirt-dashboard__heading-icon--info"
      />
    </button>
  </div>
  <div
    class="card-pf-body"
  >
    <div
      class="kubevirt-inventory__row"
      id="inventory-nodes"
    >
      <div
        class="kubevirt-inventory__row-title"
      >
        1 Nodes
      </div>
      <div
        class="kubevirt-inventory__row-status"
      >
        <div
          class="kubevirt-inventory__row-status-item"
        >
          <span
            aria-hidden="true"
            class="fa fa-check-circle kubevirt-inventory__row-status-item-icon--ok kubevirt-dashboard__icon-sm"
          />
          <span
            class="kubevirt-inventory__row-status-item-text"
          >
            1
          </span>
        </div>
      </div>
    </div>
    <div
      class="kubevirt-inventory__row"
      id="inventory-disks"
    >
      <div
        class="kubevirt-inventory__row-title"
      >
        7 Disks
      </div>
      <div
        class="kubevirt-inventory__row-status"
      >
        <div
          class="kubevirt-inventory__row-status-item"
        >
          <span
            aria-hidden="true"
            class="fa fa-exclamation-circle kubevirt-inventory__row-status-item-icon--error kubevirt-dashboard__icon-sm"
          />
          <span
            class="kubevirt-inventory__row-status-item-text"
          >
            2
          </span>
        </div>
        <div
          class="kubevirt-inventory__row-status-item"
        >
          <span
            aria-hidden="true"
            class="fa fa-check-circle kubevirt-inventory__row-status-item-icon--ok kubevirt-dashboard__icon-sm"
          />
          <span
            class="kubevirt-inventory__row-status-item-text"
          >
            5
          </span>
        </div>
      </div>
    </div>
    <div
      class="kubevirt-inventory__row"
      id="inventory-pvs"
    >
      <div
        class="kubevirt-inventory__row-title"
      >
        5 PVs
      </div>
      <div
        class="kubevirt-inventory__row-status"
      >
        <div
          class="kubevirt-inventory__row-status-item"
        >
          <span
            aria-hidden="true"
            class="fa fa-check-circle kubevirt-inventory__row-status-item-icon--ok kubevirt-dashboard__icon-sm"
          />
          <span
            class="kubevirt-inventory__row-status-item-text"
          >
            5
          </span>
        </div>
      </div>
    </div>
    <div
      class="kubevirt-inventory__row"
      id="inventory-pvcs"
    >
      <div
        class="kubevirt-inventory__row-title"
      >
        5 PVCs
      </div>
      <div
        class="kubevirt-inventory__row-status"
      >
        <div
          class="kubevirt-inventory__row-status-item"
        >
          <span
            aria-hidden="true"
            class="fa fa-check-circle kubevirt-inventory__row-status-item-icon--ok kubevirt-dashboard__icon-sm"
          />
          <span
            class="kubevirt-inventory__row-status-item-text"
          >
            5
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`<Inventory /> renders loading correctly 1`] = `
<DashboardCard
  className={null}
>
  <DashboardCardHeader
    className={null}
  >
    <DashboardCardTitle
      className={null}
    >
      Inventory
    </DashboardCardTitle>
    <DashboardCardTitleHelp>
      help for inventory
    </DashboardCardTitleHelp>
  </DashboardCardHeader>
  <DashboardCardBody
    LoadingComponent={[Function]}
    isLoading={false}
  >
    <InventoryBody
      LoadingComponent={[Function]}
    />
  </DashboardCardBody>
</DashboardCard>
`;
