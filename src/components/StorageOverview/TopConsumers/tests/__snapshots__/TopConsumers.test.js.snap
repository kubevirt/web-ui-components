// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TopConsumers /> renders Loading top consumers correctly 1`] = `
<DashboardCard
  className={null}
>
  <DashboardCardHeader
    className={null}
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        lg={6}
        md={6}
        sm={6}
        xs={6}
      >
        <DashboardCardTitle
          className={null}
        >
          Top Consumers
        </DashboardCardTitle>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        lg={6}
        md={6}
        sm={6}
        xs={6}
      >
        <DashboardCardActionsBody>
          <Dropdown
            choices={
              Array [
                "Projects",
                "Storage Classes",
                "Pods",
                "VMs",
              ]
            }
            disabled={true}
            groupClassName="kubevirt-dropdown__group"
            id="metric-type"
            isKebab={false}
            onChange={[Function]}
            value="Projects"
            withTooltips={false}
          />
          <Dropdown
            choices={
              Array [
                Object {
                  "name": "By Used Capacity",
                  "refObj": "byUsedCapacity",
                },
                Object {
                  "name": "By Requested Capacity",
                  "refObj": "byRequestedCapacity",
                },
              ]
            }
            disabled={true}
            groupClassName="kubevirt-dropdown__group"
            id="sort-by"
            isKebab={false}
            onChange={[Function]}
            value="By Used Capacity"
            withTooltips={false}
          />
        </DashboardCardActionsBody>
      </Col>
    </Row>
  </DashboardCardHeader>
  <DashboardCardBody
    LoadingComponent={[Function]}
    isLoading={true}
  >
    <TopConsumersBody
      metricType="Projects"
      sortByOption={
        Object {
          "name": "By Used Capacity",
          "refObj": "byUsedCapacity",
        }
      }
      topConsumerStats={Array []}
    />
  </DashboardCardBody>
</DashboardCard>
`;

exports[`<TopConsumers /> renders Not available top consumers correctly 1`] = `
<DashboardCard
  className={null}
>
  <DashboardCardHeader
    className={null}
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        lg={6}
        md={6}
        sm={6}
        xs={6}
      >
        <DashboardCardTitle
          className={null}
        >
          Top Consumers
        </DashboardCardTitle>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        lg={6}
        md={6}
        sm={6}
        xs={6}
      >
        <DashboardCardActionsBody>
          <Dropdown
            choices={
              Array [
                "Projects",
                "Storage Classes",
                "Pods",
                "VMs",
              ]
            }
            disabled={true}
            groupClassName="kubevirt-dropdown__group"
            id="metric-type"
            isKebab={false}
            onChange={[Function]}
            value="Projects"
            withTooltips={false}
          />
          <Dropdown
            choices={
              Array [
                Object {
                  "name": "By Used Capacity",
                  "refObj": "byUsedCapacity",
                },
                Object {
                  "name": "By Requested Capacity",
                  "refObj": "byRequestedCapacity",
                },
              ]
            }
            disabled={true}
            groupClassName="kubevirt-dropdown__group"
            id="sort-by"
            isKebab={false}
            onChange={[Function]}
            value="By Used Capacity"
            withTooltips={false}
          />
        </DashboardCardActionsBody>
      </Col>
    </Row>
  </DashboardCardHeader>
  <DashboardCardBody
    LoadingComponent={[Function]}
    isLoading={true}
  >
    <TopConsumersBody
      metricType="Projects"
      sortByOption={
        Object {
          "name": "By Used Capacity",
          "refObj": "byUsedCapacity",
        }
      }
      topConsumerStats={Array []}
    />
  </DashboardCardBody>
</DashboardCard>
`;

exports[`<TopConsumers /> renders Top Consumers correctly 1`] = `
<DashboardCard
  className={null}
>
  <DashboardCardHeader
    className={null}
  >
    <Row
      bsClass="row"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        lg={6}
        md={6}
        sm={6}
        xs={6}
      >
        <DashboardCardTitle
          className={null}
        >
          Top Consumers
        </DashboardCardTitle>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        lg={6}
        md={6}
        sm={6}
        xs={6}
      >
        <DashboardCardActionsBody>
          <Dropdown
            choices={
              Array [
                "Projects",
                "Storage Classes",
                "Pods",
                "VMs",
              ]
            }
            disabled={false}
            groupClassName="kubevirt-dropdown__group"
            id="metric-type"
            isKebab={false}
            onChange={[Function]}
            value="Projects"
            withTooltips={false}
          />
          <Dropdown
            choices={
              Array [
                Object {
                  "name": "By Used Capacity",
                  "refObj": "byUsedCapacity",
                },
                Object {
                  "name": "By Requested Capacity",
                  "refObj": "byRequestedCapacity",
                },
              ]
            }
            disabled={false}
            groupClassName="kubevirt-dropdown__group"
            id="sort-by"
            isKebab={false}
            onChange={[Function]}
            value="By Used Capacity"
            withTooltips={false}
          />
        </DashboardCardActionsBody>
      </Col>
    </Row>
  </DashboardCardHeader>
  <DashboardCardBody
    LoadingComponent={[Function]}
    isLoading={false}
  >
    <TopConsumersBody
      metricType="Projects"
      sortByOption={
        Object {
          "name": "By Used Capacity",
          "refObj": "byUsedCapacity",
        }
      }
      topConsumerStats={
        Array [
          Object {
            "metric": Object {
              "namespace": "openshift-namespace1",
            },
            "values": Array [
              Array [
                1554797100,
                "46161920",
              ],
            ],
          },
        ]
      }
    />
  </DashboardCardBody>
</DashboardCard>
`;

exports[`<TopConsumers /> renders correctly with Provider 1`] = `
<TopConsumersConnected
  LoadingComponent={[Function]}
  podsRequestedCapacity={null}
  podsUsedCapacity={null}
  projectsRequestedCapacity={null}
  projectsUsedCapacity={null}
  slClassesRequestedCapacity={null}
  slClassesUsedCapacity={null}
  vmsRequestedCapacity={null}
  vmsUsedCapacity={null}
/>
`;
