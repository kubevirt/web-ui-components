// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<VMWareImportProvider /> renders correctly 1`] = `
<VMWareImportProvider
  activeVcenterSecret={null}
  v2vvmware={null}
  vCenterSecrets={null}
  vmwareToKubevirtOsConfigMap={null}
>
  <FormRow
    className={null}
    controlSize={5}
    help="Select secret containing connection details for a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vCenterInstance"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Instance"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Select secret containing connection details for a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Instance"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Select secret containing connection details for a vCenter instance."
                isRequired={false}
                title="vCenter Instance"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Instance
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Select secret containing connection details for a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Select secret containing connection details for a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Dropdown
                choices={
                  Array [
                    "Connect to New Instance",
                  ]
                }
                disabled={false}
                id="vcenter-instance-dropdown"
                isKebab={false}
                onChange={[Function]}
                value="--- Select vCenter Instance Secret ---"
                withTooltips={false}
              >
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={true}
                  key="vcenter-instance-dropdown"
                  vertical={false}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Dropdown
                      className="kubevirt-dropdown"
                      dropdownItems={
                        Array [
                          <DropdownItem
                            onClick={[Function]}
                          >
                            Connect to New Instance
                          </DropdownItem>,
                        ]
                      }
                      isOpen={false}
                      toggle={
                        <DropdownToggle
                          iconComponent={[Function]}
                          isDisabled={false}
                          onToggle={[Function]}
                        >
                          --- Select vCenter Instance Secret ---
                        </DropdownToggle>
                      }
                    >
                      <DropdownWithContext
                        className="kubevirt-dropdown"
                        direction="down"
                        dropdownItems={
                          Array [
                            <DropdownItem
                              onClick={[Function]}
                            >
                              Connect to New Instance
                            </DropdownItem>,
                          ]
                        }
                        isGrouped={false}
                        isOpen={false}
                        isPlain={false}
                        onSelect={[Function]}
                        position="left"
                        toggle={
                          <DropdownToggle
                            iconComponent={[Function]}
                            isDisabled={false}
                            onToggle={[Function]}
                          >
                            --- Select vCenter Instance Secret ---
                          </DropdownToggle>
                        }
                      >
                        <div
                          className="pf-c-dropdown kubevirt-dropdown"
                        >
                          <DropdownToggle
                            ariaHasPopup={true}
                            iconComponent={[Function]}
                            id="pf-toggle-id-0"
                            isDisabled={false}
                            isOpen={false}
                            isPlain={false}
                            key=".0"
                            onEnter={[Function]}
                            onToggle={[Function]}
                            parentRef={
                              Object {
                                "current": <div
                                  class="pf-c-dropdown kubevirt-dropdown"
                                >
                                  <button
                                    aria-expanded="false"
                                    aria-haspopup="true"
                                    class="pf-c-dropdown__toggle"
                                    id="pf-toggle-id-0"
                                    type="button"
                                  >
                                    <span
                                      class="pf-c-dropdown__toggle-text"
                                    >
                                      --- Select vCenter Instance Secret ---
                                    </span>
                                    <svg
                                      aria-hidden="true"
                                      class="pf-c-dropdown__toggle-icon"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 320 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>,
                              }
                            }
                          >
                            <Toggle
                              ariaHasPopup={true}
                              className=""
                              id="pf-toggle-id-0"
                              isActive={false}
                              isDisabled={false}
                              isFocused={false}
                              isHovered={false}
                              isOpen={false}
                              isPlain={false}
                              isSplitButton={false}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-dropdown kubevirt-dropdown"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="true"
                                      class="pf-c-dropdown__toggle"
                                      id="pf-toggle-id-0"
                                      type="button"
                                    >
                                      <span
                                        class="pf-c-dropdown__toggle-text"
                                      >
                                        --- Select vCenter Instance Secret ---
                                      </span>
                                      <svg
                                        aria-hidden="true"
                                        class="pf-c-dropdown__toggle-icon"
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style="vertical-align: -0.125em;"
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          transform=""
                                        />
                                      </svg>
                                    </button>
                                  </div>,
                                }
                              }
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                className="pf-c-dropdown__toggle"
                                disabled={false}
                                id="pf-toggle-id-0"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                type="button"
                              >
                                <span
                                  className="pf-c-dropdown__toggle-text"
                                >
                                  --- Select vCenter Instance Secret ---
                                </span>
                                <CaretDownIcon
                                  className="pf-c-dropdown__toggle-icon"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                  title={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    className="pf-c-dropdown__toggle-icon"
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 320 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                      transform=""
                                    />
                                  </svg>
                                </CaretDownIcon>
                              </button>
                            </Toggle>
                          </DropdownToggle>
                        </div>
                      </DropdownWithContext>
                    </Dropdown>
                  </div>
                </ButtonGroup>
              </Dropdown>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareHostname"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Hostname"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Hostname"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
                isRequired={false}
                title="vCenter Hostname"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Hostname
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Address to be used for connection to a vCenter instance. The "https://" protocol will be added automatically. Example: "my.domain.com:1234".
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-hostname-dropdown"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-hostname-dropdown"
                  key="vcenter-hostname-dropdown"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-hostname-dropdown"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="User name to be used for connection to a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareUserName"
    labelSize={3}
    textPosition="text-right"
    title="vCenter User Name"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="User name to be used for connection to a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter User Name"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="User name to be used for connection to a vCenter instance."
                isRequired={false}
                title="vCenter User Name"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter User Name
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="User name to be used for connection to a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        User name to be used for connection to a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-username"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-username"
                  key="vcenter-username"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-username"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="User password to be used for connection to a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwarePassword"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Password"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="User password to be used for connection to a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Password"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="User password to be used for connection to a vCenter instance."
                isRequired={false}
                title="vCenter Password"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Password
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="User password to be used for connection to a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        User password to be used for connection to a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-password"
                onBlur={[Function]}
                onChange={[Function]}
                type="password"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-password"
                  key="vcenter-password"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="password"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="password"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className="kubevirt-create-vm-wizard__import-vmware-password"
    controlSize={5}
    help="If checked, a new secret containing the connection details will be created for future use."
    id={null}
    isHidden={false}
    isRequired={false}
    key="rememberVMwareCredentials"
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className="kubevirt-create-vm-wizard__import-vmware-password"
      controlSize={5}
      help="If checked, a new secret containing the connection details will be created for future use."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group kubevirt-create-vm-wizard__import-vmware-password"
        id={null}
      >
        <div
          className="kubevirt-form-group kubevirt-create-vm-wizard__import-vmware-password form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="If checked, a new secret containing the connection details will be created for future use."
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="If checked, a new secret containing the connection details will be created for future use."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        If checked, a new secret containing the connection details will be created for future use.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Checkbox
                checked={false}
                disabled={false}
                id="vcenter-remember-credentials"
                onBlur={[Function]}
                onChange={[Function]}
                title="Save as New vCenter Instance"
              >
                <Checkbox
                  bsClass="checkbox"
                  checked={false}
                  disabled={false}
                  id="vcenter-remember-credentials"
                  inline={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  title=""
                >
                  <div
                    className="checkbox"
                  >
                    <label
                      title=""
                    >
                      <input
                        checked={false}
                        disabled={false}
                        id="vcenter-remember-credentials"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="checkbox"
                      />
                      Save as New vCenter Instance
                    </label>
                  </div>
                </Checkbox>
              </Checkbox>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help=""
    id={null}
    isHidden={false}
    isRequired={false}
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help=""
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help=""
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="kubevirt-create-vm-wizard__import-vmware-passwordcheck-button"
                disabled={false}
                id="vcenter-connect"
                onClick={[Function]}
              >
                <button
                  className="kubevirt-create-vm-wizard__import-vmware-passwordcheck-button btn btn-default"
                  disabled={false}
                  id="vcenter-connect"
                  onClick={[Function]}
                  type="button"
                >
                  Check
                </button>
              </Button>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help=""
    id={null}
    isHidden={false}
    isRequired={false}
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help=""
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help=""
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <VMWareProviderStatus
                status={null}
              >
                <ConnectionUnknown>
                  <StatusField>
                    <div
                      className="kubevirt-create-vm-wizard__import-vmware-connection-status"
                    >
                      Status unknown
                    </div>
                  </StatusField>
                </ConnectionUnknown>
              </VMWareProviderStatus>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareVm"
    labelSize={3}
    textPosition="text-right"
    title="VM or Template to Import"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="VM or Template to Import"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
                isRequired={false}
                title="VM or Template to Import"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    VM or Template to Import
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Dropdown
                choices={Array []}
                disabled={false}
                id="vcenter-vm-dropdown"
                isKebab={false}
                onChange={[Function]}
                value="--- Select VM or Template ---"
                withTooltips={false}
              >
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={true}
                  key="vcenter-vm-dropdown"
                  vertical={false}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Dropdown
                      className="kubevirt-dropdown"
                      dropdownItems={Array []}
                      isOpen={false}
                      toggle={
                        <DropdownToggle
                          iconComponent={[Function]}
                          isDisabled={false}
                          onToggle={[Function]}
                        >
                          --- Select VM or Template ---
                        </DropdownToggle>
                      }
                    >
                      <DropdownWithContext
                        className="kubevirt-dropdown"
                        direction="down"
                        dropdownItems={Array []}
                        isGrouped={false}
                        isOpen={false}
                        isPlain={false}
                        onSelect={[Function]}
                        position="left"
                        toggle={
                          <DropdownToggle
                            iconComponent={[Function]}
                            isDisabled={false}
                            onToggle={[Function]}
                          >
                            --- Select VM or Template ---
                          </DropdownToggle>
                        }
                      >
                        <div
                          className="pf-c-dropdown kubevirt-dropdown"
                        >
                          <DropdownToggle
                            ariaHasPopup={false}
                            iconComponent={[Function]}
                            id="pf-toggle-id-1"
                            isDisabled={false}
                            isOpen={false}
                            isPlain={false}
                            key=".0"
                            onEnter={[Function]}
                            onToggle={[Function]}
                            parentRef={
                              Object {
                                "current": <div
                                  class="pf-c-dropdown kubevirt-dropdown"
                                >
                                  <button
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    class="pf-c-dropdown__toggle"
                                    id="pf-toggle-id-1"
                                    type="button"
                                  >
                                    <span
                                      class="pf-c-dropdown__toggle-text"
                                    >
                                      --- Select VM or Template ---
                                    </span>
                                    <svg
                                      aria-hidden="true"
                                      class="pf-c-dropdown__toggle-icon"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 320 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>,
                              }
                            }
                          >
                            <Toggle
                              ariaHasPopup={false}
                              className=""
                              id="pf-toggle-id-1"
                              isActive={false}
                              isDisabled={false}
                              isFocused={false}
                              isHovered={false}
                              isOpen={false}
                              isPlain={false}
                              isSplitButton={false}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-dropdown kubevirt-dropdown"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      class="pf-c-dropdown__toggle"
                                      id="pf-toggle-id-1"
                                      type="button"
                                    >
                                      <span
                                        class="pf-c-dropdown__toggle-text"
                                      >
                                        --- Select VM or Template ---
                                      </span>
                                      <svg
                                        aria-hidden="true"
                                        class="pf-c-dropdown__toggle-icon"
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style="vertical-align: -0.125em;"
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          transform=""
                                        />
                                      </svg>
                                    </button>
                                  </div>,
                                }
                              }
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={false}
                                className="pf-c-dropdown__toggle"
                                disabled={false}
                                id="pf-toggle-id-1"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                type="button"
                              >
                                <span
                                  className="pf-c-dropdown__toggle-text"
                                >
                                  --- Select VM or Template ---
                                </span>
                                <CaretDownIcon
                                  className="pf-c-dropdown__toggle-icon"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                  title={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    className="pf-c-dropdown__toggle-icon"
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 320 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                      transform=""
                                    />
                                  </svg>
                                </CaretDownIcon>
                              </button>
                            </Toggle>
                          </DropdownToggle>
                        </div>
                      </DropdownWithContext>
                    </Dropdown>
                  </div>
                </ButtonGroup>
              </Dropdown>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
</VMWareImportProvider>
`;

exports[`<VMWareImportProvider /> renders correctly when connection is successful 1`] = `
<VMWareImportProvider
  activeVcenterSecret={null}
  v2vvmware={null}
  vCenterSecrets={null}
  vmSettings={
    Object {
      "providersData": Object {
        "VMware": Object {
          "vmwareStatus": Object {
            "value": "V2V_WMWARE_STATUS_CONNECTION_SUCCESSFUL",
          },
        },
      },
    }
  }
  vmwareToKubevirtOsConfigMap={null}
>
  <FormRow
    className={null}
    controlSize={5}
    help="Select secret containing connection details for a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vCenterInstance"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Instance"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Select secret containing connection details for a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Instance"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Select secret containing connection details for a vCenter instance."
                isRequired={false}
                title="vCenter Instance"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Instance
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Select secret containing connection details for a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Select secret containing connection details for a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Dropdown
                choices={
                  Array [
                    "Connect to New Instance",
                  ]
                }
                disabled={false}
                id="vcenter-instance-dropdown"
                isKebab={false}
                onChange={[Function]}
                value="--- Select vCenter Instance Secret ---"
                withTooltips={false}
              >
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={true}
                  key="vcenter-instance-dropdown"
                  vertical={false}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Dropdown
                      className="kubevirt-dropdown"
                      dropdownItems={
                        Array [
                          <DropdownItem
                            onClick={[Function]}
                          >
                            Connect to New Instance
                          </DropdownItem>,
                        ]
                      }
                      isOpen={false}
                      toggle={
                        <DropdownToggle
                          iconComponent={[Function]}
                          isDisabled={false}
                          onToggle={[Function]}
                        >
                          --- Select vCenter Instance Secret ---
                        </DropdownToggle>
                      }
                    >
                      <DropdownWithContext
                        className="kubevirt-dropdown"
                        direction="down"
                        dropdownItems={
                          Array [
                            <DropdownItem
                              onClick={[Function]}
                            >
                              Connect to New Instance
                            </DropdownItem>,
                          ]
                        }
                        isGrouped={false}
                        isOpen={false}
                        isPlain={false}
                        onSelect={[Function]}
                        position="left"
                        toggle={
                          <DropdownToggle
                            iconComponent={[Function]}
                            isDisabled={false}
                            onToggle={[Function]}
                          >
                            --- Select vCenter Instance Secret ---
                          </DropdownToggle>
                        }
                      >
                        <div
                          className="pf-c-dropdown kubevirt-dropdown"
                        >
                          <DropdownToggle
                            ariaHasPopup={true}
                            iconComponent={[Function]}
                            id="pf-toggle-id-2"
                            isDisabled={false}
                            isOpen={false}
                            isPlain={false}
                            key=".0"
                            onEnter={[Function]}
                            onToggle={[Function]}
                            parentRef={
                              Object {
                                "current": <div
                                  class="pf-c-dropdown kubevirt-dropdown"
                                >
                                  <button
                                    aria-expanded="false"
                                    aria-haspopup="true"
                                    class="pf-c-dropdown__toggle"
                                    id="pf-toggle-id-2"
                                    type="button"
                                  >
                                    <span
                                      class="pf-c-dropdown__toggle-text"
                                    >
                                      --- Select vCenter Instance Secret ---
                                    </span>
                                    <svg
                                      aria-hidden="true"
                                      class="pf-c-dropdown__toggle-icon"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 320 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>,
                              }
                            }
                          >
                            <Toggle
                              ariaHasPopup={true}
                              className=""
                              id="pf-toggle-id-2"
                              isActive={false}
                              isDisabled={false}
                              isFocused={false}
                              isHovered={false}
                              isOpen={false}
                              isPlain={false}
                              isSplitButton={false}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-dropdown kubevirt-dropdown"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="true"
                                      class="pf-c-dropdown__toggle"
                                      id="pf-toggle-id-2"
                                      type="button"
                                    >
                                      <span
                                        class="pf-c-dropdown__toggle-text"
                                      >
                                        --- Select vCenter Instance Secret ---
                                      </span>
                                      <svg
                                        aria-hidden="true"
                                        class="pf-c-dropdown__toggle-icon"
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style="vertical-align: -0.125em;"
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          transform=""
                                        />
                                      </svg>
                                    </button>
                                  </div>,
                                }
                              }
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                className="pf-c-dropdown__toggle"
                                disabled={false}
                                id="pf-toggle-id-2"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                type="button"
                              >
                                <span
                                  className="pf-c-dropdown__toggle-text"
                                >
                                  --- Select vCenter Instance Secret ---
                                </span>
                                <CaretDownIcon
                                  className="pf-c-dropdown__toggle-icon"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                  title={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    className="pf-c-dropdown__toggle-icon"
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 320 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                      transform=""
                                    />
                                  </svg>
                                </CaretDownIcon>
                              </button>
                            </Toggle>
                          </DropdownToggle>
                        </div>
                      </DropdownWithContext>
                    </Dropdown>
                  </div>
                </ButtonGroup>
              </Dropdown>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareHostname"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Hostname"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Hostname"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
                isRequired={false}
                title="vCenter Hostname"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Hostname
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Address to be used for connection to a vCenter instance. The "https://" protocol will be added automatically. Example: "my.domain.com:1234".
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-hostname-dropdown"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-hostname-dropdown"
                  key="vcenter-hostname-dropdown"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-hostname-dropdown"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="User name to be used for connection to a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareUserName"
    labelSize={3}
    textPosition="text-right"
    title="vCenter User Name"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="User name to be used for connection to a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter User Name"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="User name to be used for connection to a vCenter instance."
                isRequired={false}
                title="vCenter User Name"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter User Name
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="User name to be used for connection to a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        User name to be used for connection to a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-username"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-username"
                  key="vcenter-username"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-username"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="User password to be used for connection to a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwarePassword"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Password"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="User password to be used for connection to a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Password"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="User password to be used for connection to a vCenter instance."
                isRequired={false}
                title="vCenter Password"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Password
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="User password to be used for connection to a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        User password to be used for connection to a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-password"
                onBlur={[Function]}
                onChange={[Function]}
                type="password"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-password"
                  key="vcenter-password"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="password"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="password"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className="kubevirt-create-vm-wizard__import-vmware-password"
    controlSize={5}
    help="If checked, a new secret containing the connection details will be created for future use."
    id={null}
    isHidden={false}
    isRequired={false}
    key="rememberVMwareCredentials"
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className="kubevirt-create-vm-wizard__import-vmware-password"
      controlSize={5}
      help="If checked, a new secret containing the connection details will be created for future use."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group kubevirt-create-vm-wizard__import-vmware-password"
        id={null}
      >
        <div
          className="kubevirt-form-group kubevirt-create-vm-wizard__import-vmware-password form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="If checked, a new secret containing the connection details will be created for future use."
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="If checked, a new secret containing the connection details will be created for future use."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        If checked, a new secret containing the connection details will be created for future use.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Checkbox
                checked={false}
                disabled={false}
                id="vcenter-remember-credentials"
                onBlur={[Function]}
                onChange={[Function]}
                title="Save as New vCenter Instance"
              >
                <Checkbox
                  bsClass="checkbox"
                  checked={false}
                  disabled={false}
                  id="vcenter-remember-credentials"
                  inline={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  title=""
                >
                  <div
                    className="checkbox"
                  >
                    <label
                      title=""
                    >
                      <input
                        checked={false}
                        disabled={false}
                        id="vcenter-remember-credentials"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="checkbox"
                      />
                      Save as New vCenter Instance
                    </label>
                  </div>
                </Checkbox>
              </Checkbox>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help=""
    id={null}
    isHidden={false}
    isRequired={false}
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help=""
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help=""
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="kubevirt-create-vm-wizard__import-vmware-passwordcheck-button"
                disabled={false}
                id="vcenter-connect"
                onClick={[Function]}
              >
                <button
                  className="kubevirt-create-vm-wizard__import-vmware-passwordcheck-button btn btn-default"
                  disabled={false}
                  id="vcenter-connect"
                  onClick={[Function]}
                  type="button"
                >
                  Check
                </button>
              </Button>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help=""
    id={null}
    isHidden={false}
    isRequired={false}
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help=""
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help=""
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <VMWareProviderStatus
                status="V2V_WMWARE_STATUS_CONNECTION_SUCCESSFUL"
              >
                <ConnectionSuccessful>
                  <StatusField>
                    <div
                      className="kubevirt-create-vm-wizard__import-vmware-connection-status"
                    >
                      Connection successful
                    </div>
                  </StatusField>
                </ConnectionSuccessful>
              </VMWareProviderStatus>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareVm"
    labelSize={3}
    textPosition="text-right"
    title="VM or Template to Import"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="VM or Template to Import"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
                isRequired={false}
                title="VM or Template to Import"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    VM or Template to Import
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Dropdown
                choices={Array []}
                disabled={false}
                id="vcenter-vm-dropdown"
                isKebab={false}
                onChange={[Function]}
                value="--- Select VM or Template ---"
                withTooltips={false}
              >
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={true}
                  key="vcenter-vm-dropdown"
                  vertical={false}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Dropdown
                      className="kubevirt-dropdown"
                      dropdownItems={Array []}
                      isOpen={false}
                      toggle={
                        <DropdownToggle
                          iconComponent={[Function]}
                          isDisabled={false}
                          onToggle={[Function]}
                        >
                          --- Select VM or Template ---
                        </DropdownToggle>
                      }
                    >
                      <DropdownWithContext
                        className="kubevirt-dropdown"
                        direction="down"
                        dropdownItems={Array []}
                        isGrouped={false}
                        isOpen={false}
                        isPlain={false}
                        onSelect={[Function]}
                        position="left"
                        toggle={
                          <DropdownToggle
                            iconComponent={[Function]}
                            isDisabled={false}
                            onToggle={[Function]}
                          >
                            --- Select VM or Template ---
                          </DropdownToggle>
                        }
                      >
                        <div
                          className="pf-c-dropdown kubevirt-dropdown"
                        >
                          <DropdownToggle
                            ariaHasPopup={false}
                            iconComponent={[Function]}
                            id="pf-toggle-id-3"
                            isDisabled={false}
                            isOpen={false}
                            isPlain={false}
                            key=".0"
                            onEnter={[Function]}
                            onToggle={[Function]}
                            parentRef={
                              Object {
                                "current": <div
                                  class="pf-c-dropdown kubevirt-dropdown"
                                >
                                  <button
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    class="pf-c-dropdown__toggle"
                                    id="pf-toggle-id-3"
                                    type="button"
                                  >
                                    <span
                                      class="pf-c-dropdown__toggle-text"
                                    >
                                      --- Select VM or Template ---
                                    </span>
                                    <svg
                                      aria-hidden="true"
                                      class="pf-c-dropdown__toggle-icon"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 320 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>,
                              }
                            }
                          >
                            <Toggle
                              ariaHasPopup={false}
                              className=""
                              id="pf-toggle-id-3"
                              isActive={false}
                              isDisabled={false}
                              isFocused={false}
                              isHovered={false}
                              isOpen={false}
                              isPlain={false}
                              isSplitButton={false}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-dropdown kubevirt-dropdown"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      class="pf-c-dropdown__toggle"
                                      id="pf-toggle-id-3"
                                      type="button"
                                    >
                                      <span
                                        class="pf-c-dropdown__toggle-text"
                                      >
                                        --- Select VM or Template ---
                                      </span>
                                      <svg
                                        aria-hidden="true"
                                        class="pf-c-dropdown__toggle-icon"
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style="vertical-align: -0.125em;"
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          transform=""
                                        />
                                      </svg>
                                    </button>
                                  </div>,
                                }
                              }
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={false}
                                className="pf-c-dropdown__toggle"
                                disabled={false}
                                id="pf-toggle-id-3"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                type="button"
                              >
                                <span
                                  className="pf-c-dropdown__toggle-text"
                                >
                                  --- Select VM or Template ---
                                </span>
                                <CaretDownIcon
                                  className="pf-c-dropdown__toggle-icon"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                  title={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    className="pf-c-dropdown__toggle-icon"
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 320 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                      transform=""
                                    />
                                  </svg>
                                </CaretDownIcon>
                              </button>
                            </Toggle>
                          </DropdownToggle>
                        </div>
                      </DropdownWithContext>
                    </Dropdown>
                  </div>
                </ButtonGroup>
              </Dropdown>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
</VMWareImportProvider>
`;

exports[`<VMWareImportProvider /> renders correctly when password is not saved 1`] = `
<VMWareImportProvider
  activeVcenterSecret={null}
  v2vvmware={null}
  vCenterSecrets={null}
  vmSettings={
    Object {
      "providersData": Object {
        "VMware": Object {
          "rememberVMwareCredentials": Object {
            "value": false,
          },
          "vmwareStatus": Object {
            "value": "V2V_WMWARE_STATUS_CONNECTION_SUCCESSFUL",
          },
        },
      },
    }
  }
  vmwareToKubevirtOsConfigMap={null}
>
  <FormRow
    className={null}
    controlSize={5}
    help="Select secret containing connection details for a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vCenterInstance"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Instance"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Select secret containing connection details for a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Instance"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Select secret containing connection details for a vCenter instance."
                isRequired={false}
                title="vCenter Instance"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Instance
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Select secret containing connection details for a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Select secret containing connection details for a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Dropdown
                choices={
                  Array [
                    "Connect to New Instance",
                  ]
                }
                disabled={false}
                id="vcenter-instance-dropdown"
                isKebab={false}
                onChange={[Function]}
                value="--- Select vCenter Instance Secret ---"
                withTooltips={false}
              >
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={true}
                  key="vcenter-instance-dropdown"
                  vertical={false}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Dropdown
                      className="kubevirt-dropdown"
                      dropdownItems={
                        Array [
                          <DropdownItem
                            onClick={[Function]}
                          >
                            Connect to New Instance
                          </DropdownItem>,
                        ]
                      }
                      isOpen={false}
                      toggle={
                        <DropdownToggle
                          iconComponent={[Function]}
                          isDisabled={false}
                          onToggle={[Function]}
                        >
                          --- Select vCenter Instance Secret ---
                        </DropdownToggle>
                      }
                    >
                      <DropdownWithContext
                        className="kubevirt-dropdown"
                        direction="down"
                        dropdownItems={
                          Array [
                            <DropdownItem
                              onClick={[Function]}
                            >
                              Connect to New Instance
                            </DropdownItem>,
                          ]
                        }
                        isGrouped={false}
                        isOpen={false}
                        isPlain={false}
                        onSelect={[Function]}
                        position="left"
                        toggle={
                          <DropdownToggle
                            iconComponent={[Function]}
                            isDisabled={false}
                            onToggle={[Function]}
                          >
                            --- Select vCenter Instance Secret ---
                          </DropdownToggle>
                        }
                      >
                        <div
                          className="pf-c-dropdown kubevirt-dropdown"
                        >
                          <DropdownToggle
                            ariaHasPopup={true}
                            iconComponent={[Function]}
                            id="pf-toggle-id-4"
                            isDisabled={false}
                            isOpen={false}
                            isPlain={false}
                            key=".0"
                            onEnter={[Function]}
                            onToggle={[Function]}
                            parentRef={
                              Object {
                                "current": <div
                                  class="pf-c-dropdown kubevirt-dropdown"
                                >
                                  <button
                                    aria-expanded="false"
                                    aria-haspopup="true"
                                    class="pf-c-dropdown__toggle"
                                    id="pf-toggle-id-4"
                                    type="button"
                                  >
                                    <span
                                      class="pf-c-dropdown__toggle-text"
                                    >
                                      --- Select vCenter Instance Secret ---
                                    </span>
                                    <svg
                                      aria-hidden="true"
                                      class="pf-c-dropdown__toggle-icon"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 320 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>,
                              }
                            }
                          >
                            <Toggle
                              ariaHasPopup={true}
                              className=""
                              id="pf-toggle-id-4"
                              isActive={false}
                              isDisabled={false}
                              isFocused={false}
                              isHovered={false}
                              isOpen={false}
                              isPlain={false}
                              isSplitButton={false}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-dropdown kubevirt-dropdown"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="true"
                                      class="pf-c-dropdown__toggle"
                                      id="pf-toggle-id-4"
                                      type="button"
                                    >
                                      <span
                                        class="pf-c-dropdown__toggle-text"
                                      >
                                        --- Select vCenter Instance Secret ---
                                      </span>
                                      <svg
                                        aria-hidden="true"
                                        class="pf-c-dropdown__toggle-icon"
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style="vertical-align: -0.125em;"
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          transform=""
                                        />
                                      </svg>
                                    </button>
                                  </div>,
                                }
                              }
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                className="pf-c-dropdown__toggle"
                                disabled={false}
                                id="pf-toggle-id-4"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                type="button"
                              >
                                <span
                                  className="pf-c-dropdown__toggle-text"
                                >
                                  --- Select vCenter Instance Secret ---
                                </span>
                                <CaretDownIcon
                                  className="pf-c-dropdown__toggle-icon"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                  title={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    className="pf-c-dropdown__toggle-icon"
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 320 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                      transform=""
                                    />
                                  </svg>
                                </CaretDownIcon>
                              </button>
                            </Toggle>
                          </DropdownToggle>
                        </div>
                      </DropdownWithContext>
                    </Dropdown>
                  </div>
                </ButtonGroup>
              </Dropdown>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareHostname"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Hostname"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Hostname"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
                isRequired={false}
                title="vCenter Hostname"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Hostname
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Address to be used for connection to a vCenter instance. The \\"https://\\" protocol will be added automatically. Example: \\"my.domain.com:1234\\"."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Address to be used for connection to a vCenter instance. The "https://" protocol will be added automatically. Example: "my.domain.com:1234".
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-hostname-dropdown"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-hostname-dropdown"
                  key="vcenter-hostname-dropdown"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-hostname-dropdown"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="User name to be used for connection to a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareUserName"
    labelSize={3}
    textPosition="text-right"
    title="vCenter User Name"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="User name to be used for connection to a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter User Name"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="User name to be used for connection to a vCenter instance."
                isRequired={false}
                title="vCenter User Name"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter User Name
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="User name to be used for connection to a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        User name to be used for connection to a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-username"
                onBlur={[Function]}
                onChange={[Function]}
                type="text"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-username"
                  key="vcenter-username"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-username"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="User password to be used for connection to a vCenter instance."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwarePassword"
    labelSize={3}
    textPosition="text-right"
    title="vCenter Password"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="User password to be used for connection to a vCenter instance."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="vCenter Password"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="User password to be used for connection to a vCenter instance."
                isRequired={false}
                title="vCenter Password"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    vCenter Password
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="User password to be used for connection to a vCenter instance."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        User password to be used for connection to a vCenter instance.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Text
                disabled={false}
                id="vcenter-password"
                onBlur={[Function]}
                onChange={[Function]}
                type="password"
                value=""
              >
                <FormControl
                  bsClass="form-control"
                  componentClass="input"
                  disabled={false}
                  id="vcenter-password"
                  key="vcenter-password"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="password"
                  value=""
                >
                  <input
                    className="form-control"
                    disabled={false}
                    id="vcenter-password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="password"
                    value=""
                  />
                </FormControl>
              </Text>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className="kubevirt-create-vm-wizard__import-vmware-password"
    controlSize={5}
    help="If checked, a new secret containing the connection details will be created for future use."
    id={null}
    isHidden={false}
    isRequired={false}
    key="rememberVMwareCredentials"
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className="kubevirt-create-vm-wizard__import-vmware-password"
      controlSize={5}
      help="If checked, a new secret containing the connection details will be created for future use."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group kubevirt-create-vm-wizard__import-vmware-password"
        id={null}
      >
        <div
          className="kubevirt-form-group kubevirt-create-vm-wizard__import-vmware-password form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="If checked, a new secret containing the connection details will be created for future use."
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="If checked, a new secret containing the connection details will be created for future use."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        If checked, a new secret containing the connection details will be created for future use.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Checkbox
                checked={false}
                disabled={false}
                id="vcenter-remember-credentials"
                onBlur={[Function]}
                onChange={[Function]}
                title="Save as New vCenter Instance"
              >
                <Checkbox
                  bsClass="checkbox"
                  checked={false}
                  disabled={false}
                  id="vcenter-remember-credentials"
                  inline={false}
                  onBlur={[Function]}
                  onChange={[Function]}
                  title=""
                >
                  <div
                    className="checkbox"
                  >
                    <label
                      title=""
                    >
                      <input
                        checked={false}
                        disabled={false}
                        id="vcenter-remember-credentials"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="checkbox"
                      />
                      Save as New vCenter Instance
                    </label>
                  </div>
                </Checkbox>
              </Checkbox>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help=""
    id={null}
    isHidden={false}
    isRequired={false}
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help=""
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help=""
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="kubevirt-create-vm-wizard__import-vmware-passwordcheck-button"
                disabled={false}
                id="vcenter-connect"
                onClick={[Function]}
              >
                <button
                  className="kubevirt-create-vm-wizard__import-vmware-passwordcheck-button btn btn-default"
                  disabled={false}
                  id="vcenter-connect"
                  onClick={[Function]}
                  type="button"
                >
                  Check
                </button>
              </Button>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help=""
    id={null}
    isHidden={false}
    isRequired={false}
    labelSize={3}
    textPosition="text-right"
    title=""
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help=""
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title=""
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help=""
                isRequired={false}
                title=""
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  />
                </ControlLabel>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <VMWareProviderStatus
                status="V2V_WMWARE_STATUS_CONNECTION_SUCCESSFUL"
              >
                <ConnectionSuccessful>
                  <StatusField>
                    <div
                      className="kubevirt-create-vm-wizard__import-vmware-connection-status"
                    >
                      Connection successful
                    </div>
                  </StatusField>
                </ConnectionSuccessful>
              </VMWareProviderStatus>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
  <FormRow
    className={null}
    controlSize={5}
    help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
    id={null}
    isHidden={false}
    isRequired={false}
    key="vmwareVm"
    labelSize={3}
    textPosition="text-right"
    title="VM or Template to Import"
    validation={Object {}}
  >
    <ValidationFormRow
      className={null}
      controlSize={5}
      help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
      id={null}
      isHidden={false}
      isRequired={false}
      labelSize={3}
      textPosition="text-right"
      title="VM or Template to Import"
      validation={Object {}}
    >
      <FormGroup
        bsClass="form-group"
        className="kubevirt-form-group"
        id={null}
      >
        <div
          className="kubevirt-form-group form-group"
          id={null}
        >
          <Col
            bsClass="col"
            className="text-right"
            componentClass="div"
            sm={3}
          >
            <div
              className="text-right col-sm-3"
            >
              <FormControlLabel
                help="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
                isRequired={false}
                title="VM or Template to Import"
              >
                <ControlLabel
                  bsClass="control-label"
                  className={null}
                  srOnly={false}
                >
                  <label
                    className="control-label"
                  >
                    VM or Template to Import
                  </label>
                </ControlLabel>
                <FieldLevelHelp
                  buttonClass=""
                  className="kubevirt-form-group__field-help"
                  content="Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded."
                  placement="right"
                  rootClose={true}
                >
                  <OverlayTrigger
                    defaultOverlayShown={false}
                    overlay={
                      <Popover
                        bsClass="popover"
                        id="popover"
                        placement="right"
                      >
                        Select a vCenter virtual machine to import. Loading of their list might take some time. The list will be enabled for selection once data are loaded.
                      </Popover>
                    }
                    placement="right"
                    rootClose={true}
                    trigger={
                      Array [
                        "click",
                      ]
                    }
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsStyle="link"
                      className="popover-pf-info"
                      disabled={false}
                      onClick={[Function]}
                    >
                      <button
                        className="popover-pf-info btn btn-link"
                        disabled={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <Icon
                          name="info"
                          type="pf"
                        >
                          <PatternflyIcon
                            className=""
                            name="info"
                          >
                            <span
                              aria-hidden="true"
                              className="pficon pficon-info"
                            />
                          </PatternflyIcon>
                        </Icon>
                      </button>
                    </Button>
                  </OverlayTrigger>
                </FieldLevelHelp>
              </FormControlLabel>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            sm={5}
          >
            <div
              className="col-sm-5"
            >
              <Dropdown
                choices={Array []}
                disabled={false}
                id="vcenter-vm-dropdown"
                isKebab={false}
                onChange={[Function]}
                value="--- Select VM or Template ---"
                withTooltips={false}
              >
                <ButtonGroup
                  block={false}
                  bsClass="btn-group"
                  justified={true}
                  key="vcenter-vm-dropdown"
                  vertical={false}
                >
                  <div
                    className="btn-group btn-group-justified"
                  >
                    <Dropdown
                      className="kubevirt-dropdown"
                      dropdownItems={Array []}
                      isOpen={false}
                      toggle={
                        <DropdownToggle
                          iconComponent={[Function]}
                          isDisabled={false}
                          onToggle={[Function]}
                        >
                          --- Select VM or Template ---
                        </DropdownToggle>
                      }
                    >
                      <DropdownWithContext
                        className="kubevirt-dropdown"
                        direction="down"
                        dropdownItems={Array []}
                        isGrouped={false}
                        isOpen={false}
                        isPlain={false}
                        onSelect={[Function]}
                        position="left"
                        toggle={
                          <DropdownToggle
                            iconComponent={[Function]}
                            isDisabled={false}
                            onToggle={[Function]}
                          >
                            --- Select VM or Template ---
                          </DropdownToggle>
                        }
                      >
                        <div
                          className="pf-c-dropdown kubevirt-dropdown"
                        >
                          <DropdownToggle
                            ariaHasPopup={false}
                            iconComponent={[Function]}
                            id="pf-toggle-id-5"
                            isDisabled={false}
                            isOpen={false}
                            isPlain={false}
                            key=".0"
                            onEnter={[Function]}
                            onToggle={[Function]}
                            parentRef={
                              Object {
                                "current": <div
                                  class="pf-c-dropdown kubevirt-dropdown"
                                >
                                  <button
                                    aria-expanded="false"
                                    aria-haspopup="false"
                                    class="pf-c-dropdown__toggle"
                                    id="pf-toggle-id-5"
                                    type="button"
                                  >
                                    <span
                                      class="pf-c-dropdown__toggle-text"
                                    >
                                      --- Select VM or Template ---
                                    </span>
                                    <svg
                                      aria-hidden="true"
                                      class="pf-c-dropdown__toggle-icon"
                                      fill="currentColor"
                                      height="1em"
                                      role="img"
                                      style="vertical-align: -0.125em;"
                                      viewBox="0 0 320 512"
                                      width="1em"
                                    >
                                      <path
                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                        transform=""
                                      />
                                    </svg>
                                  </button>
                                </div>,
                              }
                            }
                          >
                            <Toggle
                              ariaHasPopup={false}
                              className=""
                              id="pf-toggle-id-5"
                              isActive={false}
                              isDisabled={false}
                              isFocused={false}
                              isHovered={false}
                              isOpen={false}
                              isPlain={false}
                              isSplitButton={false}
                              onEnter={[Function]}
                              onToggle={[Function]}
                              parentRef={
                                Object {
                                  "current": <div
                                    class="pf-c-dropdown kubevirt-dropdown"
                                  >
                                    <button
                                      aria-expanded="false"
                                      aria-haspopup="false"
                                      class="pf-c-dropdown__toggle"
                                      id="pf-toggle-id-5"
                                      type="button"
                                    >
                                      <span
                                        class="pf-c-dropdown__toggle-text"
                                      >
                                        --- Select VM or Template ---
                                      </span>
                                      <svg
                                        aria-hidden="true"
                                        class="pf-c-dropdown__toggle-icon"
                                        fill="currentColor"
                                        height="1em"
                                        role="img"
                                        style="vertical-align: -0.125em;"
                                        viewBox="0 0 320 512"
                                        width="1em"
                                      >
                                        <path
                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                          transform=""
                                        />
                                      </svg>
                                    </button>
                                  </div>,
                                }
                              }
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={false}
                                className="pf-c-dropdown__toggle"
                                disabled={false}
                                id="pf-toggle-id-5"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                type="button"
                              >
                                <span
                                  className="pf-c-dropdown__toggle-text"
                                >
                                  --- Select VM or Template ---
                                </span>
                                <CaretDownIcon
                                  className="pf-c-dropdown__toggle-icon"
                                  color="currentColor"
                                  noVerticalAlign={false}
                                  size="sm"
                                  title={null}
                                >
                                  <svg
                                    aria-hidden={true}
                                    aria-labelledby={null}
                                    className="pf-c-dropdown__toggle-icon"
                                    fill="currentColor"
                                    height="1em"
                                    role="img"
                                    style={
                                      Object {
                                        "verticalAlign": "-0.125em",
                                      }
                                    }
                                    viewBox="0 0 320 512"
                                    width="1em"
                                  >
                                    <path
                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                      transform=""
                                    />
                                  </svg>
                                </CaretDownIcon>
                              </button>
                            </Toggle>
                          </DropdownToggle>
                        </div>
                      </DropdownWithContext>
                    </Dropdown>
                  </div>
                </ButtonGroup>
              </Dropdown>
            </div>
          </Col>
        </div>
      </FormGroup>
    </ValidationFormRow>
  </FormRow>
</VMWareImportProvider>
`;
